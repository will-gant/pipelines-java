# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:
- group: secret-variables
- group: test-variable-group

jobs:
- job: job1
  pool:
    vmImage: ubuntu-latest
  steps:
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'
  - script: echo hello from my script

- job: job2
  variables:
    GLOBAL_MYSECRET: $(mysecret)
    GLOBAL_NONSECRET: hello
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: echo '##vso[task.setVariable variable=myVar]myValue'
  - script: | 
      echo "Using an input-macro works: $(mysecret)"
      echo "Using the env var directly does not work: $MYSECRET"
      echo "here's a global non-secret: $GLOBAL_NONSECRET"
      echo "Using the mapped env var for this task works and is recommended: $MY_MAPPED_ENV_VAR"
    env:
      MY_MAPPED_ENV_VAR: $(mysecret)
  - bash: | 
      echo "Using an input-macro works: $(mysecret)"
      echo "Using the env var directly does not work: $MYSECRET"
      echo "here's a global non-secret: $GLOBAL_NONSECRET"
      echo "Using the mapped env var for this task works and is recommended: $MY_MAPPED_ENV_VAR"
    env:
      MY_MAPPED_ENV_VAR: $(mysecret)